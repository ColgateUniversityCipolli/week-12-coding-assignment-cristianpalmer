x <- dat.SS$White_SS
################################################################################
# LECTURE 19 R CODE
# CIPOLLI
# MATH 240 - SPRING 2025
################################################################################
library(tidyverse)
library(patchwork)
##########################################################
# Plot the distribution (Chapter 6)
##########################################################
n <- 50         # sample size
mu0 <- 5        # null mean
mu.lower  <- 4  # lower population mean
mu.higher <- 6  # higher population mean
sigma <- 1.3    # population standard deviation
# For plotting the distribution
ggdat.t.data <- tibble(t.lower  = numeric(1000),
t.null   = numeric(1000),
t.higher = numeric(1000))
# Simulation
for(i in 1:1000){
ggdat.t.data[i,] <- tibble(x.lower = rnorm(n, mean = mu.lower, sd=sigma),
x.null = rnorm(n, mean = mu0, sd=sigma),
x.higher = rnorm(n, mean = mu.higher, sd=sigma)) |>
summarize(t.lower = (mean(x.lower) - mu0)/(sd(x.lower)/sqrt(n)),
t.null = (mean(x.null) - mu0)/(sd(x.null)/sqrt(n)),
t.higher = (mean(x.higher) - mu0)/(sd(x.higher)/sqrt(n)))
}
# For plotting the *actual* sampling distributions
ggdat.t <- tibble(t=seq(-10,10,length.out=1000))|>
mutate(pdf.null = dt(t, df=n-1),
pdf.lower = dt(t, df=n-1, ncp = (mu.lower-mu0)/(sqrt(sigma)/sqrt(n))),
pdf.higher = dt(t, df=n-1, ncp = (mu.higher-mu0)/(sqrt(sigma)/sqrt(n))))
# Create Plot
ggplot()+
# Plot the actual distributions
geom_line(data=ggdat.t, aes(x=t, y=pdf.null,
color="T-distribution (Null)"))+
geom_line(data=ggdat.t, aes(x=t, y=pdf.lower,
color="T-distribution (Lower)"))+
geom_line(data=ggdat.t, aes(x=t, y=pdf.higher,
color="T-distribution (Higher)"))+
# Plot the simulated data
stat_density(data=ggdat.t.data,
aes(x=t.null, color="T-distribution (Null)"),
geom="line", linetype="dotted", linewidth=1)+
stat_density(data=ggdat.t.data,
aes(x=t.lower, color="T-distribution (Lower)"),
geom="line", linetype="dotted", linewidth=1)+
stat_density(data=ggdat.t.data,
aes(x=t.higher, color="T-distribution (Higher)"),
geom="line", linetype="dotted", linewidth=1)+
# Clean up aesthetics
geom_hline(yintercept=0)+
theme_bw()+
xlab("t")+
ylab("Density")+
labs(color="",
caption="Dotted lines represent simulated T")+
ggtitle("Sampling Distributions for T",
subtitle=bquote(mu[X]==5*","~n==50*","~mu[lower]==4*","~mu[higher]==6))
##########################################################
# Plot the data (Chapter 5)
##########################################################
dat.SS <- read_csv(file = "socsecRC.csv")
x <- dat.SS$White_SS
n <- 20
val.20 <- qt(0.95,
df = n-1)
n <- 20
(val.20 <- qt(0.95,
df = n-1))
(crit.value.20 = qt(0.967, df=19))
(t20.value <- qt(0.95, df = 19))
t.20 = qt(1 - alpha, n.20-1)
alpha = 0.05
n.20 = 20
t.20 = qt(1 - alpha, n.20-1)
t.20
(t20.value <- qt(0.95, df = 20-1))
# Part (b):  What values oft30provide statistically discernible support for the alternative hypothesis?
(t30.value <- qt(0.95, df = 30-1))
alpha = 0.05
n.20 = 20
t.20 = qt(1 - alpha, n.20-1)
n.30 = 40
t.30 = qt(1 - alpha, n.30-1)
t.30
########################################################################################################################
# HW 12
library(tidyverse)
library(effectsize)
######################################################################################
# Step 1.
# Part (a):  What values of t20 provide statistically discernible support for the alternative hypothesis?
(t20.value <- qt(0.95, df = 20-1))
# Part (b):  What values oft30provide statistically discernible support for the alternative hypothesis?
(t30.value <- qt(0.95, df = 30-1))
###########################################
?qt
install.packages(VGAM)
install.packages("VGAM")
library(VGAM)
?Laplace
?rlaplace()
rlaplace(20)
t <- t.test(simulations[1:20],
mu = 0,
alternative = "greater")
for (i in 1:10000){
simulations <- rlaplace(n = 30, location = a, scale = b)
# Outcome 1: Discernible support for the alternative at time 20 (Type I Error)
t <- t.test(simulations[1:20],
mu = 0,
alternative = "greater")
# Outcome 2: Not discernible support for the alternative at time 20 and discernible support for the alternative at time 30 (Type I Error)
# Outcome 3: Not discernible support for the alternative at time 20 and time 30 (Not an error)
}
library(VGAM)
a = 0
b = 4.0
for (i in 1:10000){
simulations <- rlaplace(n = 30, location = a, scale = b)
# Outcome 1: Discernible support for the alternative at time 20 (Type I Error)
t <- t.test(simulations[1:20],
mu = 0,
alternative = "greater")
# Outcome 2: Not discernible support for the alternative at time 20 and discernible support for the alternative at time 30 (Type I Error)
# Outcome 3: Not discernible support for the alternative at time 20 and time 30 (Not an error)
}
t
